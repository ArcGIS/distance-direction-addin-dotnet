<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AEEnterValue" xml:space="preserve">
    <value>Enter value de</value>
  </data>
  <data name="AEInvalidCoordinate" xml:space="preserve">
    <value>Invalid coordinate de</value>
  </data>
  <data name="AEInvalidInput" xml:space="preserve">
    <value>Invalid input de</value>
  </data>
  <data name="AEMustBePositive" xml:space="preserve">
    <value>The number must be positive de</value>
  </data>
  <data name="AENumOfRadials" xml:space="preserve">
    <value>The number of radials must be between {0} and {1} de</value>
  </data>
  <data name="AENumOfRings" xml:space="preserve">
    <value>The number of rings must be between {0} and {1} de</value>
  </data>
  <data name="ButtonCancel" xml:space="preserve">
    <value>Cancel de</value>
  </data>
  <data name="ButtonOK" xml:space="preserve">
    <value>OK de</value>
  </data>
  <data name="DistanceDirectionLabel" xml:space="preserve">
    <value>Distance and Direction de</value>
  </data>
  <data name="EFConverter" xml:space="preserve">
    <value>Cant convert back de</value>
  </data>
  <data name="EndPointAndStartPointSameError" xml:space="preserve">
    <value>Ending Point should not be the same as the Starting Point de</value>
  </data>
  <data name="EnumBearingAndDistance" xml:space="preserve">
    <value>Distance and Bearing de</value>
  </data>
  <data name="EnumCTDD" xml:space="preserve">
    <value>DD de</value>
  </data>
  <data name="EnumCTDDM" xml:space="preserve">
    <value>DDM de</value>
  </data>
  <data name="EnumCTDMS" xml:space="preserve">
    <value>DMS de</value>
  </data>
  <data name="EnumCTGARS" xml:space="preserve">
    <value>GARS de</value>
  </data>
  <data name="EnumCTMGRS" xml:space="preserve">
    <value>MGRS de</value>
  </data>
  <data name="EnumCTNone" xml:space="preserve">
    <value>Default Map Unit de</value>
  </data>
  <data name="EnumCTUSNG" xml:space="preserve">
    <value>USNG de</value>
  </data>
  <data name="EnumCTUTM" xml:space="preserve">
    <value>UTM de</value>
  </data>
  <data name="EnumDegrees" xml:space="preserve">
    <value>Degrees de</value>
  </data>
  <data name="EnumDiameter" xml:space="preserve">
    <value>Diameter de</value>
  </data>
  <data name="EnumFeet" xml:space="preserve">
    <value>Feet de</value>
  </data>
  <data name="EnumFeetHour" xml:space="preserve">
    <value>Feet / Hour de</value>
  </data>
  <data name="EnumFeetSec" xml:space="preserve">
    <value>Feet / Second de</value>
  </data>
  <data name="EnumFull" xml:space="preserve">
    <value>Full de</value>
  </data>
  <data name="EnumGeodesic" xml:space="preserve">
    <value>Geodetic de</value>
  </data>
  <data name="EnumGradians" xml:space="preserve">
    <value>Gradians de</value>
  </data>
  <data name="EnumGreatElliptic" xml:space="preserve">
    <value>Great Elliptic de</value>
  </data>
  <data name="EnumKilometers" xml:space="preserve">
    <value>Kilometers de</value>
  </data>
  <data name="EnumKilometersHour" xml:space="preserve">
    <value>Kilometers / Hour de</value>
  </data>
  <data name="EnumKilometersSec" xml:space="preserve">
    <value>Kilometers / Second de</value>
  </data>
  <data name="EnumLoxodrome" xml:space="preserve">
    <value>Loxodrome de</value>
  </data>
  <data name="EnumMeters" xml:space="preserve">
    <value>Meters de</value>
  </data>
  <data name="EnumMetersHour" xml:space="preserve">
    <value>Meters / Hour de</value>
  </data>
  <data name="EnumMetersSec" xml:space="preserve">
    <value>Meters / Second de</value>
  </data>
  <data name="EnumMiles" xml:space="preserve">
    <value>Miles de</value>
  </data>
  <data name="EnumMilesHour" xml:space="preserve">
    <value>Miles / Hour de</value>
  </data>
  <data name="EnumMilesSec" xml:space="preserve">
    <value>Miles / Second de</value>
  </data>
  <data name="EnumMils" xml:space="preserve">
    <value>Mils de</value>
  </data>
  <data name="EnumNauticalMile" xml:space="preserve">
    <value>Nautical Miles de</value>
  </data>
  <data name="EnumNauticalMilesHour" xml:space="preserve">
    <value>Nautical Miles / Hour de</value>
  </data>
  <data name="EnumNauticalMilesSec" xml:space="preserve">
    <value>Nautical Miles / Second de</value>
  </data>
  <data name="EnumPoints" xml:space="preserve">
    <value>Points de</value>
  </data>
  <data name="EnumRadius" xml:space="preserve">
    <value>Radius de</value>
  </data>
  <data name="EnumSemi" xml:space="preserve">
    <value>Semi de</value>
  </data>
  <data name="EnumYards" xml:space="preserve">
    <value>Yards de</value>
  </data>
  <data name="ErrorDeleteFailed" xml:space="preserve">
    <value>Failed to delete features from layer: de</value>
  </data>
  <data name="ErrorFeatureClassNotFound" xml:space="preserve">
    <value>Required feature layer was not found: de</value>
  </data>
  <data name="ErrorFeatureCreateTitle" xml:space="preserve">
    <value>Feature Create Error de</value>
  </data>
  <data name="FeatureClassNameError" xml:space="preserve">
    <value>Please provide a valid feature class name de</value>
  </data>
  <data name="InvalidSpatialReferenceError" xml:space="preserve">
    <value>The operation requires a valid spatial reference de</value>
  </data>
  <data name="KMZExportComplete" xml:space="preserve">
    <value>KMZ Exported Successfully de</value>
  </data>
  <data name="LabelAngle" xml:space="preserve">
    <value>Angle de</value>
  </data>
  <data name="LabelAxisGroup" xml:space="preserve">
    <value>Axis de</value>
  </data>
  <data name="LabelAxisUnits" xml:space="preserve">
    <value>Units de</value>
  </data>
  <data name="LabelCenterPoint" xml:space="preserve">
    <value>Center Point de</value>
  </data>
  <data name="LabelClearGraphics" xml:space="preserve">
    <value>Clear All de</value>
  </data>
  <data name="LabelCreateCircleFrom" xml:space="preserve">
    <value>From de</value>
  </data>
  <data name="LabelCreateEllipseWith" xml:space="preserve">
    <value>Create Ellipse with de</value>
  </data>
  <data name="LabelCreateFeature" xml:space="preserve">
    <value>Create Feature de</value>
  </data>
  <data name="LabelDirectionAzimuth" xml:space="preserve">
    <value>Direction / Azimuth de</value>
  </data>
  <data name="LabelDisplayCoordinate" xml:space="preserve">
    <value>Display Coordinate de</value>
  </data>
  <data name="LabelDistanceCalculator" xml:space="preserve">
    <value>Distance Calculator de</value>
  </data>
  <data name="LabelDistanceLength" xml:space="preserve">
    <value>Distance / Length de</value>
  </data>
  <data name="LabelDistanceUnit" xml:space="preserve">
    <value>Distance Unit de</value>
  </data>
  <data name="LabelEllipseType" xml:space="preserve">
    <value>Ellipse Type de</value>
  </data>
  <data name="LabelEndingPoint" xml:space="preserve">
    <value>Ending Point de</value>
  </data>
  <data name="LabelFrom" xml:space="preserve">
    <value>From: de</value>
  </data>
  <data name="LabelInteractive" xml:space="preserve">
    <value>Interactive de</value>
  </data>
  <data name="LabelInterval" xml:space="preserve">
    <value>Interval Between Rings de</value>
  </data>
  <data name="LabelLineType" xml:space="preserve">
    <value>Line Type de</value>
  </data>
  <data name="LabelMajorAxis" xml:space="preserve">
    <value>Major de</value>
  </data>
  <data name="LabelMapPoint" xml:space="preserve">
    <value>Map Point de</value>
  </data>
  <data name="LabelMinorAxis" xml:space="preserve">
    <value>Minor de</value>
  </data>
  <data name="LabelNumberOfRadials" xml:space="preserve">
    <value>Number of Radials de</value>
  </data>
  <data name="LabelNumberOfRings" xml:space="preserve">
    <value>Number of Rings de</value>
  </data>
  <data name="LabelOrientationAngle" xml:space="preserve">
    <value>Angle de</value>
  </data>
  <data name="LabelOrientationGroup" xml:space="preserve">
    <value>Orientation de</value>
  </data>
  <data name="LabelOrientationUnit" xml:space="preserve">
    <value>Units de</value>
  </data>
  <data name="LabelPSCancel" xml:space="preserve">
    <value>Cancel  de</value>
  </data>
  <data name="LabelPSFCShape" xml:space="preserve">
    <value>Feature class / Shapefile de</value>
  </data>
  <data name="LabelPSKMZ" xml:space="preserve">
    <value>KMZ de</value>
  </data>
  <data name="LabelPSOK" xml:space="preserve">
    <value>OK de</value>
  </data>
  <data name="LabelPSTitle" xml:space="preserve">
    <value>Select Output de</value>
  </data>
  <data name="LabelRadius" xml:space="preserve">
    <value>Radius de</value>
  </data>
  <data name="LabelRadiusDiameter" xml:space="preserve">
    <value>Radius / Diameter de</value>
  </data>
  <data name="LabelRangeRingsCenterPoint" xml:space="preserve">
    <value>Center Point de</value>
  </data>
  <data name="LabelRangeRingsDistanceBetween" xml:space="preserve">
    <value>Distance between Rings de</value>
  </data>
  <data name="LabelRangeRingsNumberofRadials" xml:space="preserve">
    <value>Number of Radials de</value>
  </data>
  <data name="LabelRate" xml:space="preserve">
    <value>Rate de</value>
  </data>
  <data name="LabelRingType" xml:space="preserve">
    <value>Ring Type de</value>
  </data>
  <data name="LabelSaveAs" xml:space="preserve">
    <value>Export de</value>
  </data>
  <data name="LabelStartingPoint" xml:space="preserve">
    <value>Starting Point de</value>
  </data>
  <data name="LabelTabCircle" xml:space="preserve">
    <value>Circle de</value>
  </data>
  <data name="LabelTabEllipse" xml:space="preserve">
    <value>Ellipse de</value>
  </data>
  <data name="LabelTabLines" xml:space="preserve">
    <value>Line de</value>
  </data>
  <data name="LabelTabRange" xml:space="preserve">
    <value>Rings de</value>
  </data>
  <data name="LabelTime" xml:space="preserve">
    <value>Time de</value>
  </data>
  <data name="MsgOutOfAOI" xml:space="preserve">
    <value>Point is out of bounds de</value>
  </data>
  <data name="MsgRingValidDistances" xml:space="preserve">
    <value>Add one or more distances to draw the rings. de</value>
  </data>
  <data name="PTBDelete" xml:space="preserve">
    <value>Could not delete features: de</value>
  </data>
  <data name="PTBException" xml:space="preserve">
    <value>Exception caught: de</value>
  </data>
  <data name="PTBExport" xml:space="preserve">
    <value>Exporting Layer:  de</value>
  </data>
  <data name="PTBLoad" xml:space="preserve">
    <value>Loading Required Layer Package... de</value>
  </data>
  <data name="PTBMsgCancel" xml:space="preserve">
    <value>Save As cancelled de</value>
  </data>
  <data name="PTBMsgClear" xml:space="preserve">
    <value>Unable to clear selected features de</value>
  </data>
  <data name="PTBMsgEdit" xml:space="preserve">
    <value>Edits must be saved before proceeding. Save edits? de</value>
  </data>
  <data name="PTBMsgFail" xml:space="preserve">
    <value>Save As process failed. de</value>
  </data>
  <data name="PTBMsgSave" xml:space="preserve">
    <value>Save All Edits de</value>
  </data>
  <data name="PTBNFLayer" xml:space="preserve">
    <value>Could not find required layer in the active map:  de</value>
  </data>
  <data name="PTBWarning" xml:space="preserve">
    <value>Warning - unable to execute command: de</value>
  </data>
  <data name="RCException" xml:space="preserve">
    <value>exception de</value>
  </data>
  <data name="TitleEditProperties" xml:space="preserve">
    <value>Edit Properties de</value>
  </data>
  <data name="TooltipAddDistance" xml:space="preserve">
    <value>Add Distance de</value>
  </data>
  <data name="TooltipDelete" xml:space="preserve">
    <value>Delete de</value>
  </data>
  <data name="TooltipEditProperties" xml:space="preserve">
    <value>Edit Properties de</value>
  </data>
  <data name="TooltipMapPointTool" xml:space="preserve">
    <value>Map Point Tool de</value>
  </data>
  <data name="WFAEException" xml:space="preserve">
    <value>'expression' did not provide a property name. de</value>
  </data>
  <data name="WFHandle" xml:space="preserve">
    <value>handler de</value>
  </data>
  <data name="WFMessage" xml:space="preserve">
    <value>Please provide a lambda expression like 'n =&gt; n.PropertyName' de</value>
  </data>
  <data name="WFNException" xml:space="preserve">
    <value>expression de</value>
  </data>
</root>