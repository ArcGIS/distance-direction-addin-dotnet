<UserControl x:Class="ProAppDistanceAndDirectionModule.Views.ProRangeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ProAppDistanceAndDirectionModule.Common"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:prop="clr-namespace:ProAppDistanceAndDirectionModule.Properties"
             xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Common/MAResourceDictionary.xaml" />
                <ResourceDictionary Source="../ProMAResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <ObjectDataProvider x:Key="ringFromData"
                                MethodName="GetValues"
                                ObjectType="{x:Type sys:Enum}">
                <ObjectDataProvider.MethodParameters>
                    <x:TypeExtension TypeName="local:RingTypes" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="mainControl">
        <ScrollViewer Padding="0,0,3,0" VerticalScrollBarVisibility="Auto">
            <StackPanel>
                <TextBlock Margin="3,3,0,0" Text="{x:Static prop:Resources.LabelRingType}" />
                <ComboBox x:Name="cmbRingType"
                          Height="Auto"
                          Margin="3,3,0,0"
                          ItemsSource="{Binding Source={StaticResource ringFromData}}"
                          SelectedItem="{Binding Path=RingType,
                                                 Mode=TwoWay}"/>
                <TextBlock x:Name="Center_Point_Label"
                           Margin="3,3,0,0"
                           Text="{x:Static prop:Resources.LabelRangeRingsCenterPoint}" />
                <Grid Grid.Row="2" Grid.ColumnSpan="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="Input_Coords"
                             Margin="3,3,0,0"
                             Text="{Binding Path=Point1Formatted,
                                            UpdateSourceTrigger=PropertyChanged,
                                            ValidatesOnExceptions=True}"
                             Validation.ErrorTemplate="{StaticResource errorTemplate}" PreviewKeyDown="Input_Coords_KeyDown">
                        <TextBox.InputBindings>
                            <KeyBinding Key="Enter"
                                        Command="{Binding EnterKeyCommand}"
                                        CommandParameter="{Binding ElementName=mainControl,
                                                                   Path=.}" />
                        </TextBox.InputBindings>
                    </TextBox>
                    <Button Grid.Column="1"
                              Margin="3,3,0,0"
                            Style="{StaticResource ProButtonProperties}" 
                            ToolTip="{x:Static prop:Resources.TooltipEditProperties}"/>
                    <ToggleButton Grid.Column="2"
                                  Margin="3,3,0,0"
                                  IsChecked="{Binding IsToolActive}"
                                  ToolTip="{x:Static prop:Resources.TooltipMapPointTool}"
                                  Style="{StaticResource ProBorderedTButtonStyle}" >
                        <Image Width="18"
                               Height="18"
                               Source="/DistanceAndDirection;component/Images/Add_Point.png" />
                    </ToggleButton>
                </Grid>
                <TextBlock x:Name="NumberofRingsLabel"
                           Margin="3,3,0,0"
                           Text="{x:Static prop:Resources.LabelNumberOfRings}" >
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Origin}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Cumulative}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox x:Name="Number_of_Rings_Text_Box"
                         Margin="3,3,0,0"
                         Text="{Binding Path=NumberOfRings,
                                        UpdateSourceTrigger=PropertyChanged,
                                        ValidatesOnExceptions=True}"
                         Validation.ErrorTemplate="{StaticResource errorTemplate}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter"
                                    Command="{Binding EnterKeyCommand}"
                                    CommandParameter="{Binding ElementName=mainControl,
                                                               Path=.}" />
                    </TextBox.InputBindings>
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Fixed}">
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Origin}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Cumulative}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
                <TextBlock x:Name="DistanceLabel"
                           Margin="3,3,0,0">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{x:Static prop:Resources.LabelRangeRingsDistanceBetween}" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Interactive}">
                                    <Setter Property="Text" Value="{x:Static prop:Resources.LabelRadius}" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Origin}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Cumulative}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox x:Name="Distance_Between_Rings_TextBox"
                         Margin="3,3,0,0"
                         Text="{Binding DistanceString,
                                        UpdateSourceTrigger=PropertyChanged,
                                        ValidatesOnExceptions=True}"
                         Validation.ErrorTemplate="{StaticResource errorTemplate}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter"
                                    Command="{Binding EnterKeyCommand}"
                                    CommandParameter="{Binding ElementName=mainControl,
                                                               Path=.}" />
                    </TextBox.InputBindings>
                    <TextBox.Style>
                        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                            <Setter Property="IsEnabled" Value="False" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Fixed}">
                                    <Setter Property="IsEnabled" Value="True" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Origin}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Cumulative}">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <TextBlock x:Name="DistanceUnitLbl"
                           Margin="3,3,0,0"
                           Text="{x:Static prop:Resources.LabelDistanceUnit}" />

                <ComboBox Validation.ErrorTemplate="{StaticResource errorTemplate}" x:Name="cmbLineDistanceType"
                          Height="Auto"
                          Margin="3,3,0,0"
            ItemsSource="{Binding Source={StaticResource lineDistanceData}}" 
                          SelectedItem="{Binding Path=LineDistanceType,
                                                 Mode=TwoWay, ValidatesOnExceptions=True}">
                    <ComboBox.InputBindings>
                        <KeyBinding Key="Enter"
                                            Command="{Binding EnterKeyCommand}"
                                            CommandParameter="{Binding ElementName=mainControl,
                                                                       Path=.}" />
                    </ComboBox.InputBindings>
                    <!--<ComboBox.ItemContainerStyle>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Foreground" Value="Black" />
                        </Style>
                    </ComboBox.ItemContainerStyle>-->
                </ComboBox>

                <GroupBox  
                          Margin="3,3,0,0"
                          Padding="3"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Header="Distances">
                    <UserControl Content="{Binding OutputDistanceView}" />
                    <GroupBox.Style>
                        <Style TargetType="GroupBox" BasedOn="{StaticResource {x:Type GroupBox}}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Origin}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding RingType}" Value="{x:Static local:RingTypes.Cumulative}">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupBox.Style>
                </GroupBox>

                <TextBlock x:Name="NumberofRadialsLabel"
                           Margin="3,3,0,0"
                           Text="{x:Static prop:Resources.LabelRangeRingsNumberofRadials}" 
                           
                           />
                <TextBox x:Name="NumberOfRadials_TextBox"
                         Margin="3,3,0,0"
                         
                         Text="{Binding Path=NumberOfRadials,
                                        UpdateSourceTrigger=PropertyChanged,
                                        ValidatesOnExceptions=True}"
                         Validation.ErrorTemplate="{StaticResource errorTemplate}">
                    <TextBox.InputBindings>
                        <KeyBinding Key="Enter"
                                    Command="{Binding EnterKeyCommand}"
                                    CommandParameter="{Binding ElementName=mainControl,
                                                               Path=.}" />
                    </TextBox.InputBindings>
                </TextBox>

                <StackPanel Margin="3,3,0,0"
                            HorizontalAlignment="Right"
                            Orientation="Horizontal">
                    <Button Width="Auto"
                            Height="Auto"
                            Margin="3,3,0,0"
                	    Command="{Binding ClearGraphicsCommand}"
                            Content="{x:Static prop:Resources.LabelClearGraphics}"
                            ToolTip="{x:Static prop:Resources.LabelClearGraphics}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMapGraphics}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button Width="Auto"
                            Height="Auto"
                            Margin="3,3,0,0"
                        Command="{Binding SaveAsCommand}"
                            Content="{x:Static prop:Resources.LabelSaveAs}"
                            ToolTip="{x:Static prop:Resources.LabelSaveAs}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding HasMapGraphics}" Value="True">
                                        <Setter Property="IsEnabled" Value="True" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
